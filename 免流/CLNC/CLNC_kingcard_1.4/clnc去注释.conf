#######DNS部分########

dns::Global {
    dns_listen = 0.0.0.0:6653;
    cacheLimit = 512;
    cachePath = /dev/null;
}

dnsAcl {
    destAddr = 58.144.152.119:8090;
    header_host = 119.29.29.29:80;
    query_type = A;
    query_type = AAAA;
}
dnsAcl {
    destAddr = 58.144.152.119:8091;
    header_host = 114.114.114.119:53;
    tunnel_proxy = on;
    lookup_mode = tcpdns;
}

#######UDP部分重要重要########
httpUDP::udp {
    //如果搭建了clns服务器可以删除下一行的注释
    udp_tproxy_listen = 0.0.0.0:6650;

    destAddr = 58.144.152.119:8091;
    encrypt = 'huo';
    header_host = 139.159.219.82:8989;
}

#######TCP部分########
tcp::Global {
    tcp_listen = 0.0.0.0:6650;
    ml_host = dns.weixin.qq.com;
}

httpMod::http_replace_auth {
    del_line = Q-GUID;
    del_line = Q-Token;
    strrep = "\n\r" -> "\nQ-GUID: [GUID]\r\nQ-TOKEN: [TOKEN]\r\n\r";
}
//配置核心自己的CONNECT请求头，指定服务器为pros.cutebi.taobao69.cn:80
httpMod::dynamic_api {
    set_first = "CONNECT pros.cutebi.taobao69.cn:80 HTTP/1.1\r\n";
}


//这个配置POST代理
tcpProxy::http_POST_proxy {
    //可以同时使用多个IP
    destAddr = 58.144.152.119:8090;
    httpMod = http_replace_auth;
}
//QQ浏览器8090 8091只改变IP
tcpProxy::QQBrowse_8090 {
    destAddr = 58.144.152.119:8090;
}
tcpProxy::QQBrowse_8091 {
    destAddr = 58.144.152.119:8091;
}
//这个配置tunnel代理
tcpProxy::tunnel_proxy {
    destAddr = 58.144.152.119:8091;
    tunnel_proxy = on;
}
//这个配置CONNECT的tunnel代理
tcpProxy::CONNECT_tunnel_proxy {
    destAddr = 58.144.152.119:8091;
    tunnel_proxy = httpOverTunnel;
}
//这个配置代理核心发出去的http请求
tcpProxy::dynamic_api_proxy {
    destAddr = 58.144.152.119:8091
    tunnel_proxy = on;
    tunnelHttpMod = dynamic_api;
}


//核心自身的动态api通过CONNECT代理
tcpAcl::dynamic_api {
    tcpProxy = dynamic_api_proxy;
    matchMode = firstMatch;
    dst_ip = 127.0.0.3;
}
//默认连接到TUNNEL代理，降低延迟
tcpAcl::firstConnect {
    matchMode = firstMatch;
    tcpProxy = tunnel_proxy;
    //CONNECT跟POST请求，不能经过核心加一层CONNECT代理
    reMatch = http_POST https_CONNECT;
    dst_port != 8090:8091;
}
//QQ浏览器的8090 8091只改变IP
tcpAcl::token_8091 {
    tcpProxy = QQBrowse_8091;
    continue: dst_port = 8091;
    hdr_key(Q-TOKEN) = .;
}
tcpAcl::token_8090 {
    tcpProxy = QQBrowse_8090;
    continue: dst_port = 8090;
    hdr_key(Q-TOKEN) = .;
}
tcpAcl::http_POST {
    tcpProxy = http_POST_proxy;
    method = POST;
}
tcpAcl::https_CONNECT {
    tcpProxy = CONNECT_tunnel_proxy;
    method = CONNECT;
}

//用于接收socks5请求
socks5::recv_socks5 {
    socks5_listen = 0.0.0.0:1081;
    socks5_dns = 127.0.0.1:6653;
    handshake_timeout = 1;
}